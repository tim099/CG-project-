#include "class/tim/string/String.h"
#include "class/tim/math/Math.h"
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <iostream>
namespace Tim {
String::String() {

}
String::~String() {

}
bool String::get_line(std::istream &is,std::string& strline,bool skip_blankline,bool skip_blankspace){
	char line[256];
	if(is.eof())return false;
	if(skip_blankline){
		while(!is.eof()){
			is.getline(line,sizeof(line));
			if(strlen(line)!=0)break;
		}
	}else{
		is.getline(line,sizeof(line));
	}
	strline=std::string(line);
	if(skip_blankspace){
		strline=Tim::String::cut(strline,std::string(" 	")+'"');
	}

	return true;
}
void String::gen_array_num(char *str,int num){
	sprintf(str,"[%d]",num);
}
bool String::within(char c,const std::string& str){
	for(unsigned j=0;j<str.length();j++){
		if(c==str[j])return true;
	}
	return false;
}
std::vector<std::string> String::split(std::string str,std::string delimiter){
	std::vector<std::string> out;
	//Tim::String::substring(strtest,0,5)
	/*int i=0,prev=0;
	char* cur_at=str.c_str();
	while(true){
		i=skip(cur_at,delimiter);
		if(i>0)cur_at+=i;
		else break;
	}*/

	return out;
}
std::string String::cut(std::string str,std::string cskip,bool front,bool back){
	unsigned start=0;
	unsigned end=str.size();
	if(front){
		while(start<str.size()){
			if(!within(str[start],cskip))break;//start
			start++;
		}
	}
	if(back){
		while(end>0&&within(str[end-1],cskip)){
			end--;
		}
	}
	return str.substr(start,end);
}

}
